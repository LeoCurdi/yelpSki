
	- npm init // create json file
	- npm i express mongoose ejs method-override // install everything (these are all listed in the json file)
	
	- node seeds/index.js // run the seeds file once which will populate the database with initial data

	- nodemon app.js // start the server
	- mongosh // access mongoDB shell


YelpSki is a full stack web application developed as part of Colt Steele's web developer course on Udemy. It allows ski enthusiasts to register, 
post ski resorts, and leave reviews. Users can explore resort locations on an interactive cluster map powered by Mapbox API. 
Overall, YelpSki provides a user-friendly, secure, and visually appealing platform for ski enthusiasts to connect and share their experiences.

The backend is built with NodeJS, Express, and MongoDB, allowing persistent data storage and encrypted user information.
Key features include authentication with Passport, full CRUD functionality, error handling, input validation, and file uploads with Cloudinary. 
Authorization is set up such that contributions to the site are linked to user accounts and thus can only be modified by the author.
Additionally, the application implements various cybersecurity strategies like injection and input sanitization.


----------------------------------------------------------


YelpSki is a full stack web application that allows users to register, post ski resorts, and leave reviews.
The backend is implemented using NodeJS, Express, and MongoDB.
All data is persistent and stored in a database, and user info is encrypted for security. The program is complete with 
user authentication with Passport and authorization such that contributions to the site are linked to specific users 
and can only be modified by the author.
full CRUD, 
error handling, 
input/form validation, 
file upload and store on cloud using Cloudinary,
cluster map displaying location of all ski resorts with Mapbox API,
misc cybersecurity strategies implemented - Mongo injection, sanitizing HTML, etc
I completed this project as part of Colt Steele's web developer course on Udemy.


---------------------------------------------------------------


Technologies Used:
HTML5 - markup language for creating web pages and web applications

CSS3 - used for describing the presentation of a document written in a markup language

Bootstrap - free and open-source front-end web framework for designing websites and web applications quickly

Node.js - pen-source, cross-platform JavaScript run-time environment for executing JavaScript code server-side

Express.js - for building web applications and APIs and connecting middleware

MongoDB - open-source cross-platform document-oriented NoSQL database program to store details like users info, campgrounds info and comments

PassportJS - authentication middleware for Node.js. Extremely flexible and modular, Passport can be unobtrusively dropped in to any Express-based web application
